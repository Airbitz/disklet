{"version":3,"file":"disklet.js","sources":["../src/backends/dummy.ts","../src/helpers/paths.ts","../src/backends/local-storage.ts","../src/backends/memory.ts","../src/backends/node.ts","../src/legacy/downgrade.ts","../src/legacy/helpers.ts","../src/legacy/loggedFolder.ts","../src/legacy/unionFolder.ts","../src/helpers/deep-list.ts","../src/helpers/log.ts","../src/helpers/merge.ts","../src/helpers/navigate.ts","../src/index.ts"],"sourcesContent":["import { Disklet } from '../index'\n\nexport function makeNodeDisklet(path: string): Disklet {\n  throw new Error('makeNodeDisklet is not available on this platform')\n}\n\nexport function makeReactNativeDisklet(): Disklet {\n  throw new Error('makeReactNativeDisklet is not available on this platform')\n}\n","/**\n * Interprets a path as a series of folder lookups,\n * handling special components like `.` and `..`.\n */\nexport function normalizePath(path: string): string {\n  if (/^\\//.test(path)) throw new Error('Absolute paths are not supported')\n  const parts = path.split('/')\n\n  // Shift down good elements, dropping bad ones:\n  let i = 0 // Read index\n  let j = 0 // Write index\n  while (i < parts.length) {\n    const part = parts[i++]\n    if (part === '..') j--\n    else if (part !== '.' && part !== '') parts[j++] = part\n\n    if (j < 0) throw new Error('Path would escape folder')\n  }\n\n  // Array items from 0 to j are the path:\n  return parts.slice(0, j).join('/')\n}\n\n/**\n * Appends a slash if the path isn't blank.\n */\nexport function folderizePath(path: string): string {\n  return path === '' ? path : path + '/'\n}\n","import { base64 } from 'rfc4648'\n\nimport { folderizePath, normalizePath } from '../helpers/paths'\nimport { Disklet, DiskletListing } from '../index'\n\n// The Typescript DOM library isn't available on React Native,\n// so work around that:\nexport interface WebStorage {\n  readonly length: number\n  getItem(key: string): string | null\n  key(index: number): string | null\n  removeItem(key: string): void\n  setItem(key: string, value: string): void\n}\ndeclare const window: { localStorage: WebStorage }\n\n/**\n * Lists the keys in a localStorage object.\n */\nfunction storageKeys(storage: WebStorage): string[] {\n  const out = []\n  for (let i = 0; i < storage.length; ++i) {\n    const key = storage.key(i)\n    if (key != null) out.push(key)\n  }\n  return out\n}\n\n/**\n * Emulates a filesystem in memory.\n */\nexport function makeLocalStorageDisklet(\n  storage: WebStorage = window.localStorage,\n  opts: { prefix?: string } = {}\n): Disklet {\n  const prefix = opts.prefix != null ? folderizePath(opts.prefix) : '/'\n\n  return {\n    delete(path: string): Promise<unknown> {\n      const file = normalizePath(path)\n\n      // Try deleteing as a file:\n      if (storage.getItem(prefix + file) != null) {\n        storage.removeItem(prefix + file)\n      }\n\n      // Try deleting as a folder:\n      const folder = folderizePath(file)\n      for (const key of storageKeys(storage)) {\n        if (key.indexOf(prefix + folder) === 0) storage.removeItem(key)\n      }\n      return Promise.resolve()\n    },\n\n    getData(path: string): Promise<Uint8Array> {\n      return this.getText(path).then(text => base64.parse(text))\n    },\n\n    getText(path: string): Promise<string> {\n      const file = normalizePath(path)\n      const item = storage.getItem(prefix + file)\n      if (item == null) {\n        return Promise.reject(new Error(`Cannot load \"${file}\"`))\n      }\n      return Promise.resolve(item)\n    },\n\n    async list(path: string = ''): Promise<DiskletListing> {\n      const file = normalizePath(path)\n      const out: DiskletListing = {}\n\n      // Try the path as a file:\n      if (storage.getItem(prefix + file) != null) out[file] = 'file'\n\n      // Try the path as a folder:\n      const folder = folderizePath(file)\n      for (const key of storageKeys(storage)) {\n        if (key.indexOf(prefix + folder) !== 0) continue\n\n        const slash = key.indexOf('/', prefix.length + folder.length)\n        if (slash < 0) out[key.slice(prefix.length)] = 'file'\n        else out[key.slice(prefix.length, slash)] = 'folder'\n      }\n\n      return Promise.resolve(out)\n    },\n\n    setData(path: string, data: ArrayLike<number>) {\n      return this.setText(path, base64.stringify(data))\n    },\n\n    setText(path: string, text: string): Promise<unknown> {\n      if (typeof text !== 'string') {\n        return Promise.reject(new TypeError('setText expects a string'))\n      }\n\n      storage.setItem(prefix + normalizePath(path), text)\n      return Promise.resolve()\n    }\n  }\n}\n","import { folderizePath, normalizePath } from '../helpers/paths'\nimport { Disklet, DiskletListing } from '../index'\n\nexport interface MemoryStorage {\n  [key: string]: string | Uint8Array\n}\n\n/**\n * Emulates a filesystem in memory.\n */\nexport function makeMemoryDisklet(storage: MemoryStorage = {}): Disklet {\n  return {\n    delete(path: string): Promise<unknown> {\n      const file = normalizePath(path)\n\n      // Try deleteing as a file:\n      if (storage['/' + file] != null) delete storage['/' + file]\n\n      // Try deleting as a folder:\n      const folder = folderizePath(file)\n      for (const key of Object.keys(storage)) {\n        if (key.indexOf('/' + folder) === 0) delete storage[key]\n      }\n      return Promise.resolve()\n    },\n\n    getData(path: string): Promise<Uint8Array> {\n      const file = normalizePath(path)\n      const item = storage['/' + file]\n      if (item == null) {\n        return Promise.reject(new Error(`Cannot load \"${file}\"`))\n      }\n      if (typeof item === 'string') {\n        return Promise.reject(new Error(`\"${file}\" is a text file.`))\n      }\n      return Promise.resolve(item)\n    },\n\n    getText(path: string): Promise<string> {\n      const file = normalizePath(path)\n      const item = storage['/' + file]\n      if (item == null) {\n        return Promise.reject(new Error(`Cannot load \"${file}\"`))\n      }\n      if (typeof item !== 'string') {\n        return Promise.reject(new Error(`\"${file}\" is a binary file.`))\n      }\n      return Promise.resolve(item)\n    },\n\n    async list(path: string = ''): Promise<DiskletListing> {\n      const file = normalizePath(path)\n      const out: DiskletListing = {}\n\n      // Try the path as a file:\n      if (storage['/' + file] != null) out[file] = 'file'\n\n      // Try the path as a folder:\n      const folder = folderizePath(file)\n      for (const key of Object.keys(storage)) {\n        if (key.indexOf('/' + folder) !== 0) continue\n\n        const slash = key.indexOf('/', 1 + folder.length)\n        if (slash < 0) out[key.slice(1)] = 'file'\n        else out[key.slice(1, slash)] = 'folder'\n      }\n\n      return Promise.resolve(out)\n    },\n\n    setData(path: string, data: ArrayLike<number>) {\n      // We use `any` here becase Flow is too dumb to know that `ArrayLike`\n      // is a perfectly acceptable argument to `Uint8Array.from`:\n      const flowHack: any = data\n      const array = Uint8Array.from(flowHack)\n\n      storage['/' + normalizePath(path)] = array\n      return Promise.resolve()\n    },\n\n    setText(path: string, text: string): Promise<unknown> {\n      if (typeof text !== 'string') {\n        return Promise.reject(new TypeError('setText expects a string'))\n      }\n\n      storage['/' + normalizePath(path)] = text\n      return Promise.resolve()\n    }\n  }\n}\n","/* global Buffer */\n\nimport fs from 'fs'\nimport pathUtil from 'path'\n\nimport { folderizePath, normalizePath } from '../helpers/paths'\nimport { Disklet, DiskletListing } from '../index'\n\n// Promise versions of node.js file operations: -----------------------------\n\nfunction mkdir(path: string): Promise<unknown> {\n  return new Promise((resolve, reject) =>\n    fs.mkdir(path, undefined, err =>\n      err != null && err.code !== 'EEXIST' ? reject(err) : resolve()\n    )\n  )\n}\n\nfunction rmdir(path: string): Promise<unknown> {\n  return new Promise((resolve, reject) =>\n    fs.rmdir(path, err => (err != null ? reject(err) : resolve()))\n  )\n}\n\nfunction readdir(path: string): Promise<string[]> {\n  return new Promise((resolve, reject) =>\n    fs.readdir(path, (err, out) => (err != null ? reject(err) : resolve(out)))\n  )\n}\n\nfunction unlink(path: string): Promise<unknown> {\n  return new Promise((resolve, reject) =>\n    fs.unlink(path, err => (err != null ? reject(err) : resolve()))\n  )\n}\n\nclass Queue {\n  callBackList : Array<(onEnd: () => void) => void>\n  _active : boolean\n  onEmpty? : () => void;\n  constructor() {\n    this.callBackList = []\n    this._active = false\n  }\n\n  next() {\n    if (this._active) return;\n    const fn = this.callBackList.shift();\n    if (!fn) {\n      if (this.onEmpty) {\n        this.onEmpty();\n        this.onEmpty = undefined;\n      }\n      return;\n    }\n    this._active = true;\n    fn(() => {\n      this._active = false\n      process.nextTick(()=>this.next())\n    })\n  }\n}\nconst writeFilePathQueue : { [id: string] : Queue } = {};\nfunction writeFile(\n  path: string,\n  data: any,\n  opts: fs.WriteFileOptions\n): Promise<unknown> {\n  return new Promise((resolve, reject) => {\n    const currentTask = (onEnd: () => void)=> {\n      fs.writeFile(path, data, opts, err => {\n        onEnd()\n        err != null ? reject(err) : resolve()\n      })\n    }\n    if (!writeFilePathQueue[path]) {\n      writeFilePathQueue[path] = new Queue()\n      writeFilePathQueue[path].onEmpty = () => {\n        delete writeFilePathQueue[path]\n      }\n    }\n    writeFilePathQueue[path].callBackList.push(currentTask)\n    writeFilePathQueue[path].next()\n  })\n}\n\n// Helpers: -----------------------------------------------------------------\n\n/**\n * Recursively deletes a file or directory.\n */\nfunction deepDelete(path: string): Promise<unknown> {\n  return getType(path).then(type => {\n    if (type === 'file') {\n      return unlink(path)\n    }\n    if (type === 'folder') {\n      return readdir(path)\n        .then(names =>\n          Promise.all(names.map(name => deepDelete(pathUtil.join(path, name))))\n        )\n        .then(() => rmdir(path))\n    }\n  })\n}\n\n/**\n * Recursively creates a directory.\n */\nfunction deepMkdir(path: string): Promise<unknown> {\n  return mkdir(path).catch(err => {\n    if (err.code !== 'ENOENT') throw err\n    return deepMkdir(pathUtil.dirname(path)).then(() => mkdir(path))\n  })\n}\n\n/**\n * Writes a file, creating its directory if needed.\n */\nfunction deepWriteFile(\n  path: string,\n  data: Buffer | string,\n  opts: fs.WriteFileOptions\n): Promise<unknown> {\n  return writeFile(path, data, opts).catch(err => {\n    if (err.code !== 'ENOENT') throw err\n    return deepMkdir(pathUtil.dirname(path)).then(() =>\n      writeFile(path, data, opts)\n    )\n  })\n}\n\n/**\n * Returns a path's type, or '' if anything goes wrong.\n */\nfunction getType(path: string): Promise<'file' | 'folder' | ''> {\n  return new Promise(resolve =>\n    fs.stat(path, (err, out) => {\n      if (err != null) resolve('')\n      else if (out.isFile()) resolve('file')\n      else if (out.isDirectory()) resolve('folder')\n      else resolve('')\n    })\n  )\n}\n\n// --------------------------------------------------------------------------\n\nexport function makeNodeDisklet(path: string): Disklet {\n  const root = pathUtil.resolve(path)\n  function locate(path: string): string {\n    return pathUtil.join(root, normalizePath(path))\n  }\n\n  return {\n    delete(path: string): Promise<unknown> {\n      return deepDelete(locate(path))\n    },\n\n    getData(path: string): Promise<Uint8Array> {\n      return new Promise((resolve, reject) =>\n        fs.readFile(locate(path), {}, (err, out) =>\n          err != null ? reject(err) : resolve(out)\n        )\n      )\n    },\n\n    getText(path: string): Promise<string> {\n      return new Promise((resolve, reject) =>\n        fs.readFile(locate(path), 'utf8', (err, out) =>\n          err != null ? reject(err) : resolve(out)\n        )\n      )\n    },\n\n    list(path: string = ''): Promise<DiskletListing> {\n      const file = normalizePath(path)\n      const nativePath = locate(path)\n\n      return getType(nativePath).then(type => {\n        const out: DiskletListing = {}\n\n        if (type === 'file') {\n          out[file] = 'file'\n          return out\n        }\n        if (type === 'folder') {\n          return readdir(nativePath).then(names =>\n            Promise.all(\n              names.map(name => getType(pathUtil.join(nativePath, name)))\n            ).then(types => {\n              const folder = folderizePath(file)\n              for (let i = 0; i < names.length; ++i) {\n                const type = types[i]\n                if (type !== '') out[folder + names[i]] = type\n              }\n              return out\n            })\n          )\n        }\n        return out\n      })\n    },\n\n    setData(path: string, data: ArrayLike<number>): Promise<unknown> {\n      const flowHack: any = data\n      return deepWriteFile(locate(path), Buffer.from(flowHack), {})\n    },\n\n    setText(path: string, text: string): Promise<unknown> {\n      return deepWriteFile(locate(path), text, 'utf8')\n    }\n  }\n}\n","import { Disklet } from '../index'\nimport { DiskletFile, DiskletFolder } from './legacy'\n\nclass File {\n  _disklet: Disklet\n  _path: string\n\n  constructor(disklet: Disklet, path: string) {\n    this._disklet = disklet\n    this._path = path\n  }\n\n  delete(): Promise<unknown> {\n    return this._disklet.delete(this._path)\n  }\n\n  getData(): Promise<Uint8Array> {\n    return this._disklet.getData(this._path)\n  }\n\n  getText(): Promise<string> {\n    return this._disklet.getText(this._path)\n  }\n\n  setData(data: ArrayLike<number>): Promise<unknown> {\n    return this._disklet.setData(this._path, data)\n  }\n\n  setText(text: string): Promise<unknown> {\n    return this._disklet.setText(this._path, text)\n  }\n}\n\nclass Folder {\n  _disklet: Disklet\n  _path: string\n\n  constructor(disklet: Disklet, path: string) {\n    this._disklet = disklet\n    this._path = path\n  }\n\n  delete(): Promise<unknown> {\n    return this._disklet.delete(this._path)\n  }\n\n  file(path: string): DiskletFile {\n    return new File(this._disklet, this._path + '/' + path)\n  }\n\n  folder(path: string): DiskletFolder {\n    return new Folder(this._disklet, this._path + '/' + path)\n  }\n\n  listFiles(): Promise<string[]> {\n    return this._disklet.list(this._path).then(list =>\n      Object.keys(list)\n        .filter(path => list[path] === 'file')\n        .map(path => path.replace(/^.*\\//, ''))\n    )\n  }\n\n  listFolders(): Promise<string[]> {\n    return this._disklet.list(this._path).then(list =>\n      Object.keys(list)\n        .filter(path => list[path] === 'folder')\n        .map(path => path.replace(/^.*\\//, ''))\n    )\n  }\n}\n\nexport function downgradeDisklet(disklet: Disklet): DiskletFolder {\n  return new Folder(disklet, '.')\n}\n","import { DiskletFile, DiskletFolder } from './legacy'\n\n/**\n * Interprets a path as a series of folder lookups,\n * handling special components like `.` and `..`.\n */\nfunction followPath(folder: DiskletFolder, parts: string[]): DiskletFolder {\n  let i = 0 // Read index\n  let j = 0 // Write index\n\n  // Shift down good elements, dropping bad ones:\n  while (i < parts.length) {\n    const part = parts[i++]\n    if (part === '..') j--\n    else if (part !== '.' && part !== '') parts[j++] = part\n\n    if (j < 0) throw new Error('Path would escape folder')\n  }\n\n  // Navigate the folder:\n  for (i = 0; i < j; ++i) {\n    folder = folder.folder(parts[i])\n  }\n  return folder\n}\n\n/**\n * Navigates down to the file indicated by the path.\n */\nexport function locateFile(folder: DiskletFolder, path: string): DiskletFile {\n  const parts = path.split('/')\n  const filename = parts.pop()\n  if (filename == null) throw new Error('Empty path')\n  return followPath(folder, parts).file(filename)\n}\n\n/**\n * Navigates down to the sub-folder indicated by the path.\n */\nexport function locateFolder(\n  folder: DiskletFolder,\n  path: string\n): DiskletFolder {\n  const parts = path.split('/')\n  return followPath(folder, parts)\n}\n\ntype FileIterator<T> = (\n  file: DiskletFile,\n  name: string,\n  parentFolder: DiskletFolder\n) => T | Promise<T>\n\ntype FolderIterator<T> = (\n  folder: DiskletFolder,\n  name: string,\n  parentFolder: DiskletFolder\n) => T | Promise<T>\n\n/**\n * Applies an async function to all the files in a folder.\n */\nexport function mapFiles<T>(\n  folder: DiskletFolder,\n  f: FileIterator<T>\n): Promise<T[]> {\n  return folder\n    .listFiles()\n    .then(names =>\n      Promise.all(names.map(name => f(folder.file(name), name, folder)))\n    )\n}\n\n/**\n * Applies an async function to all the sub-folders in a folder.\n */\nexport function mapFolders<T>(\n  folder: DiskletFolder,\n  f: FolderIterator<T>\n): Promise<T[]> {\n  return folder\n    .listFolders()\n    .then(names =>\n      Promise.all(names.map(name => f(folder.folder(name), name, folder)))\n    )\n}\n\n/**\n * Recursively applies an async function to all the files in a folder tree.\n * The file names are expanded into paths, and the result is a flat array.\n */\nexport function mapAllFiles<T>(\n  folder: DiskletFolder,\n  f: FileIterator<T>\n): Promise<T[]> {\n  function recurse(\n    folder: DiskletFolder,\n    f: FileIterator<T>,\n    prefix: string\n  ): Promise<T[]> {\n    return Promise.all([\n      mapFiles(folder, (file, name) => f(file, prefix + name, folder)),\n      mapFolders(folder, (folder, name) =>\n        recurse(folder, f, prefix + name + '/')\n      )\n    ]).then(([files, folders]) => files.concat(...folders))\n  }\n\n  return recurse(folder, f, '')\n}\n","import { DiskletFile, DiskletFolder } from './legacy'\n\ntype LogOperation =\n  | 'delete file'\n  | 'delete folder'\n  | 'get data'\n  | 'get text'\n  | 'list files'\n  | 'list folders'\n  | 'set data'\n  | 'set text'\n\ninterface LogOptions {\n  callback?: (path: string, operation: LogOperation) => unknown\n  verbose?: boolean\n}\n\nfunction logConsole(path: string, operation: string): void {\n  console.log(`${operation} \"${path}\"`)\n}\n\nfunction log(path: string, operation: LogOperation, opts: LogOptions): void {\n  const { callback = logConsole, verbose = false } = opts\n  if (verbose || /set|delete/.test(operation)) {\n    callback(path, operation)\n  }\n}\n\nclass LoggedFile {\n  _file: DiskletFile\n  _opts: LogOptions\n  _path: string\n\n  constructor(file: DiskletFile, path: string, opts: LogOptions) {\n    this._file = file\n    this._path = path\n    this._opts = opts\n  }\n\n  delete(): Promise<unknown> {\n    log(this._path, 'delete file', this._opts)\n    return this._file.delete()\n  }\n\n  getData(): Promise<Uint8Array> {\n    log(this._path, 'get data', this._opts)\n    return this._file.getData()\n  }\n\n  getText(): Promise<string> {\n    log(this._path, 'get text', this._opts)\n    return this._file.getText()\n  }\n\n  setData(data: ArrayLike<number>): Promise<unknown> {\n    log(this._path, 'set data', this._opts)\n    return this._file.setData(data)\n  }\n\n  setText(text: string): Promise<unknown> {\n    log(this._path, 'set text', this._opts)\n    return this._file.setText(text)\n  }\n\n  getPath(): string {\n    return this._path\n  }\n}\n\nclass LoggedFolder {\n  _folder: DiskletFolder\n  _opts: LogOptions\n  _path: string\n\n  constructor(folder: DiskletFolder, path: string, opts: LogOptions) {\n    this._folder = folder\n    this._path = path\n    this._opts = opts\n  }\n\n  delete(): Promise<unknown> {\n    log(this._path, 'delete folder', this._opts)\n    return this._folder.delete()\n  }\n\n  file(name: string): DiskletFile {\n    return new LoggedFile(\n      this._folder.file(name),\n      this._path + name,\n      this._opts\n    )\n  }\n\n  folder(name: string): DiskletFolder {\n    return new LoggedFolder(\n      this._folder.folder(name),\n      this._path + name + '/',\n      this._opts\n    )\n  }\n\n  listFiles(): Promise<string[]> {\n    log(this._path, 'list files', this._opts)\n    return this._folder.listFiles()\n  }\n\n  listFolders(): Promise<string[]> {\n    log(this._path, 'list folders', this._opts)\n    return this._folder.listFolders()\n  }\n}\n\nexport function makeLoggedFolder(\n  folder: DiskletFolder,\n  opts: LogOptions = {}\n): DiskletFolder {\n  return new LoggedFolder(folder, '', opts)\n}\n","import { mapFiles, mapFolders } from './helpers'\nimport { DiskletFile, DiskletFolder } from './legacy'\n\nfunction removeDuplicates(master: string[], fallback: string[]): string[] {\n  const blacklist: { [name: string]: true } = {}\n  const out: string[] = []\n  master.forEach(item => {\n    if (/\\._x_$/.test(item)) {\n      blacklist[item] = true\n    } else {\n      blacklist[item + '._x_'] = true\n      out.push(item)\n    }\n  })\n\n  fallback.forEach(item => {\n    if (!blacklist[item + '._x_']) out.push(item)\n  })\n\n  return out\n}\n\n/**\n * A file within a unionFolder.\n */\nclass UnionFile {\n  _master: DiskletFile\n  _fallback: DiskletFile\n  _whiteout: DiskletFile\n\n  constructor(\n    master: DiskletFile,\n    fallback: DiskletFile,\n    whiteout: DiskletFile\n  ) {\n    this._master = master\n    this._fallback = fallback\n    this._whiteout = whiteout\n  }\n\n  delete(): Promise<unknown> {\n    return Promise.all([\n      this._whiteout.setData([]),\n      this._master.delete().catch(e => null)\n    ])\n  }\n\n  getData(): Promise<Uint8Array> {\n    return this._master.getData().catch(e =>\n      this._whiteout.getData().then(\n        data => {\n          throw new Error('File has been deleted')\n        },\n        e => this._fallback.getData()\n      )\n    )\n  }\n\n  getText(): Promise<string> {\n    return this._master.getText().catch(e =>\n      this._whiteout.getData().then(\n        data => {\n          throw new Error('File has been deleted')\n        },\n        e => this._fallback.getText()\n      )\n    )\n  }\n\n  setData(data: ArrayLike<number>): Promise<unknown> {\n    return this._master.setData(data)\n  }\n\n  setText(text: string): Promise<unknown> {\n    return this._master.setText(text)\n  }\n\n  getPath(): string {\n    throw new Error('Cannot call getPath on a Union Folder')\n  }\n}\n\n/**\n * Reads and writes go to a master folder, but if a read fails,\n * we will also try the fallback folder.\n */\nexport class UnionFolder {\n  _master: DiskletFolder\n  _fallback: DiskletFolder\n\n  constructor(master: DiskletFolder, fallback: DiskletFolder) {\n    this._master = master\n    this._fallback = fallback\n  }\n\n  delete(): Promise<unknown> {\n    return Promise.all([\n      mapFiles(this, file => file.delete()),\n      mapFolders(this, folder => folder.delete())\n    ]).then(() => {})\n  }\n\n  file(name: string): DiskletFile {\n    return new UnionFile(\n      this._master.file(name),\n      this._fallback.file(name),\n      this._master.file(name + '._x_')\n    )\n  }\n\n  folder(name: string): DiskletFolder {\n    return new UnionFolder(\n      this._master.folder(name),\n      this._fallback.folder(name)\n    )\n  }\n\n  listFiles(): Promise<string[]> {\n    return Promise.all([\n      this._master.listFiles(),\n      this._fallback.listFiles()\n    ]).then(values => removeDuplicates(values[0], values[1]))\n  }\n\n  listFolders(): Promise<string[]> {\n    return Promise.all([\n      this._master.listFolders(),\n      this._fallback.listFolders()\n    ]).then(values => removeDuplicates(values[0], values[1]))\n  }\n}\n\nexport function makeUnionFolder(\n  master: DiskletFolder,\n  fallback: DiskletFolder\n): DiskletFolder {\n  return new UnionFolder(master, fallback)\n}\n","import { Disklet, DiskletListing } from '../index'\n\n/**\n * Recursively lists a folder.\n */\nexport function deepList(\n  disklet: Disklet,\n  path?: string\n): Promise<DiskletListing> {\n  return disklet.list(path).then(list =>\n    // Recurse into subfolders:\n    Promise.all(\n      Object.keys(list)\n        .filter(path => list[path] === 'folder')\n        .map(path => deepList(disklet, path))\n    ).then(children => Object.assign(list, ...children))\n  )\n}\n","import { Disklet, DiskletListing } from '../index'\nimport { normalizePath } from './paths'\n\ntype LogOperation =\n  | 'delete'\n  | 'get data'\n  | 'get text'\n  | 'list'\n  | 'set data'\n  | 'set text'\n\ninterface LogOptions {\n  callback?: (path: string, operation: LogOperation) => unknown\n  verbose?: boolean\n}\n\nexport function logDisklet(disklet: Disklet, opts: LogOptions = {}): Disklet {\n  const {\n    callback = (path: string, operation: string) => {\n      console.log(`${operation} \"${path}\"`)\n    },\n    verbose = false\n  } = opts\n\n  const log = (operation: LogOperation, path: string): void => {\n    if (verbose || /set|delete/.test(operation)) {\n      callback(path, operation)\n    }\n  }\n\n  return {\n    delete(path: string): Promise<unknown> {\n      log('delete', normalizePath(path))\n      return disklet.delete(path)\n    },\n\n    getData(path: string): Promise<Uint8Array> {\n      log('get data', normalizePath(path))\n      return disklet.getData(path)\n    },\n\n    getText(path: string): Promise<string> {\n      log('get text', normalizePath(path))\n      return disklet.getText(path)\n    },\n\n    list(path?: string): Promise<DiskletListing> {\n      log('list', path != null ? normalizePath(path) : '')\n      return disklet.list(path)\n    },\n\n    setData(path: string, data: ArrayLike<number>): Promise<unknown> {\n      log('set data', normalizePath(path))\n      return disklet.setData(path, data)\n    },\n\n    setText(path: string, text: string): Promise<unknown> {\n      log('set text', normalizePath(path))\n      return disklet.setText(path, text)\n    }\n  }\n}\n","import { Disklet, DiskletListing } from '../index'\n\nexport function mergeDisklets(master: Disklet, fallback: Disklet): Disklet {\n  return {\n    delete(path: string): Promise<unknown> {\n      return Promise.all([master.delete(path), fallback.delete(path)])\n    },\n\n    getData(path: string): Promise<Uint8Array> {\n      return master.getData(path).catch(e => fallback.getData(path))\n    },\n\n    getText(path: string): Promise<string> {\n      return master.getText(path).catch(e => fallback.getText(path))\n    },\n\n    list(path?: string): Promise<DiskletListing> {\n      return Promise.all([master.list(path), fallback.list(path)]).then(\n        ([masterList, fallbackList]) => Object.assign(fallbackList, masterList)\n      )\n    },\n\n    setData(path: string, data: ArrayLike<number>): Promise<unknown> {\n      return master.setData(path, data)\n    },\n\n    setText(path: string, text: string): Promise<unknown> {\n      return master.setText(path, text)\n    }\n  }\n}\n","import { Disklet, DiskletListing } from '../index'\nimport { folderizePath, normalizePath } from './paths'\n\nexport function navigateDisklet(disklet: Disklet, path: string): Disklet {\n  const prefix = folderizePath(normalizePath(path))\n\n  return {\n    delete(path: string): Promise<unknown> {\n      return disklet.delete(prefix + path)\n    },\n\n    getData(path: string): Promise<Uint8Array> {\n      return disklet.getData(prefix + path)\n    },\n\n    getText(path: string): Promise<string> {\n      return disklet.getText(prefix + path)\n    },\n\n    list(path: string = '.'): Promise<DiskletListing> {\n      return disklet.list(prefix + path).then(listing => {\n        const out: DiskletListing = {}\n        for (const path in listing) {\n          out[path.replace(prefix, '')] = listing[path]\n        }\n        return out\n      })\n    },\n\n    setData(path: string, data: ArrayLike<number>): Promise<unknown> {\n      return disklet.setData(prefix + path, data)\n    },\n\n    setText(path: string, text: string): Promise<unknown> {\n      return disklet.setText(prefix + path, text)\n    }\n  }\n}\n","import { makeReactNativeDisklet } from './backends/dummy'\nimport { makeLocalStorageDisklet, WebStorage } from './backends/local-storage'\nimport { makeMemoryDisklet, MemoryStorage } from './backends/memory'\nimport { makeNodeDisklet } from './backends/node'\nimport { DiskletFolder, downgradeDisklet } from './legacy/legacy'\n\nexport * from './helpers/helpers'\nexport * from './legacy/legacy'\nexport * from './types'\nexport {\n  makeLocalStorageDisklet,\n  makeMemoryDisklet,\n  makeNodeDisklet,\n  makeReactNativeDisklet\n}\n\n// legacy API ----------------------------------------------------------------\n\nexport function makeLocalStorageFolder(\n  storage: WebStorage,\n  opts?: { prefix?: string }\n): DiskletFolder {\n  return downgradeDisklet(makeLocalStorageDisklet(storage, opts))\n}\n\nexport function makeMemoryFolder(storage?: MemoryStorage): DiskletFolder {\n  return downgradeDisklet(makeMemoryDisklet(storage))\n}\n\nexport function makeNodeFolder(path: string): DiskletFolder {\n  return downgradeDisklet(makeNodeDisklet(path))\n}\n\nexport function makeReactNativeFolder(): DiskletFolder {\n  return downgradeDisklet(makeReactNativeDisklet())\n}\n"],"names":["makeReactNativeDisklet","Error","normalizePath","path","test","parts","split","i","j","length","part","slice","join","folderizePath","storageKeys","storage","out","key","push","makeLocalStorageDisklet","opts","window","localStorage","prefix","file","getItem","removeItem","folder","indexOf","Promise","resolve","getData","getText","then","text","base64","parse","item","reject","list","slash","setData","data","setText","stringify","TypeError","setItem","makeMemoryDisklet","Object","keys","flowHack","array","Uint8Array","from","mkdir","fs","undefined","err","code","rmdir","readdir","unlink","Queue","callBackList","_active","next","fn","shift","onEmpty","process","nextTick","writeFilePathQueue","writeFile","currentTask","onEnd","deepDelete","getType","type","names","all","map","name","pathUtil","deepMkdir","dirname","deepWriteFile","stat","isFile","isDirectory","makeNodeDisklet","root","locate","readFile","nativePath","types","Buffer","File","disklet","_disklet","_path","Folder","listFiles","filter","replace","listFolders","downgradeDisklet","followPath","locateFile","filename","pop","locateFolder","mapFiles","f","mapFolders","mapAllFiles","recurse","files","folders","concat","logConsole","operation","console","log","callback","verbose","LoggedFile","_file","_opts","getPath","LoggedFolder","_folder","makeLoggedFolder","removeDuplicates","master","fallback","blacklist","forEach","UnionFile","whiteout","_master","_fallback","_whiteout","e","UnionFolder","values","makeUnionFolder","deepList","children","logDisklet","mergeDisklets","masterList","fallbackList","navigateDisklet","listing","makeLocalStorageFolder","makeMemoryFolder","makeNodeFolder","makeReactNativeFolder"],"mappings":"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"}