{"version":3,"file":"disklet.web.js","sources":["../src/backends/dummy.ts","../src/helpers/paths.ts","../src/backends/local-storage.ts","../src/backends/memory.ts","../src/legacy/downgrade.ts","../src/legacy/helpers.ts","../src/legacy/loggedFolder.ts","../src/legacy/unionFolder.ts","../src/helpers/deep-list.ts","../src/helpers/log.ts","../src/helpers/merge.ts","../src/helpers/navigate.ts","../src/browser.ts"],"sourcesContent":["import { Disklet } from '../index'\n\nexport function makeNodeDisklet(path: string): Disklet {\n  throw new Error('makeNodeDisklet is not available on this platform')\n}\n\nexport function makeReactNativeDisklet(): Disklet {\n  throw new Error('makeReactNativeDisklet is not available on this platform')\n}\n","/**\n * Interprets a path as a series of folder lookups,\n * handling special components like `.` and `..`.\n */\nexport function normalizePath(path: string): string {\n  if (/^\\//.test(path)) throw new Error('Absolute paths are not supported')\n  const parts = path.split('/')\n\n  // Shift down good elements, dropping bad ones:\n  let i = 0 // Read index\n  let j = 0 // Write index\n  while (i < parts.length) {\n    const part = parts[i++]\n    if (part === '..') j--\n    else if (part !== '.' && part !== '') parts[j++] = part\n\n    if (j < 0) throw new Error('Path would escape folder')\n  }\n\n  // Array items from 0 to j are the path:\n  return parts.slice(0, j).join('/')\n}\n\n/**\n * Appends a slash if the path isn't blank.\n */\nexport function folderizePath(path: string): string {\n  return path === '' ? path : path + '/'\n}\n","import { base64 } from 'rfc4648'\n\nimport { folderizePath, normalizePath } from '../helpers/paths'\nimport { Disklet, DiskletListing } from '../index'\n\n// The Typescript DOM library isn't available on React Native,\n// so work around that:\nexport interface WebStorage {\n  readonly length: number\n  getItem(key: string): string | null\n  key(index: number): string | null\n  removeItem(key: string): void\n  setItem(key: string, value: string): void\n}\ndeclare const window: { localStorage: WebStorage }\n\n/**\n * Lists the keys in a localStorage object.\n */\nfunction storageKeys(storage: WebStorage): string[] {\n  const out = []\n  for (let i = 0; i < storage.length; ++i) {\n    const key = storage.key(i)\n    if (key != null) out.push(key)\n  }\n  return out\n}\n\n/**\n * Emulates a filesystem in memory.\n */\nexport function makeLocalStorageDisklet(\n  storage: WebStorage = window.localStorage,\n  opts: { prefix?: string } = {}\n): Disklet {\n  const prefix = opts.prefix != null ? folderizePath(opts.prefix) : '/'\n\n  return {\n    delete(path: string): Promise<unknown> {\n      const file = normalizePath(path)\n\n      // Try deleteing as a file:\n      if (storage.getItem(prefix + file) != null) {\n        storage.removeItem(prefix + file)\n      }\n\n      // Try deleting as a folder:\n      const folder = folderizePath(file)\n      for (const key of storageKeys(storage)) {\n        if (key.indexOf(prefix + folder) === 0) storage.removeItem(key)\n      }\n      return Promise.resolve()\n    },\n\n    getData(path: string): Promise<Uint8Array> {\n      return this.getText(path).then(text => base64.parse(text))\n    },\n\n    getText(path: string): Promise<string> {\n      const file = normalizePath(path)\n      const item = storage.getItem(prefix + file)\n      if (item == null) {\n        return Promise.reject(new Error(`Cannot load \"${file}\"`))\n      }\n      return Promise.resolve(item)\n    },\n\n    async list(path: string = ''): Promise<DiskletListing> {\n      const file = normalizePath(path)\n      const out: DiskletListing = {}\n\n      // Try the path as a file:\n      if (storage.getItem(prefix + file) != null) out[file] = 'file'\n\n      // Try the path as a folder:\n      const folder = folderizePath(file)\n      for (const key of storageKeys(storage)) {\n        if (key.indexOf(prefix + folder) !== 0) continue\n\n        const slash = key.indexOf('/', prefix.length + folder.length)\n        if (slash < 0) out[key.slice(prefix.length)] = 'file'\n        else out[key.slice(prefix.length, slash)] = 'folder'\n      }\n\n      return Promise.resolve(out)\n    },\n\n    setData(path: string, data: ArrayLike<number>) {\n      return this.setText(path, base64.stringify(data))\n    },\n\n    setText(path: string, text: string): Promise<unknown> {\n      if (typeof text !== 'string') {\n        return Promise.reject(new TypeError('setText expects a string'))\n      }\n\n      storage.setItem(prefix + normalizePath(path), text)\n      return Promise.resolve()\n    }\n  }\n}\n","import { folderizePath, normalizePath } from '../helpers/paths'\nimport { Disklet, DiskletListing } from '../index'\n\nexport interface MemoryStorage {\n  [key: string]: string | Uint8Array\n}\n\n/**\n * Emulates a filesystem in memory.\n */\nexport function makeMemoryDisklet(storage: MemoryStorage = {}): Disklet {\n  return {\n    delete(path: string): Promise<unknown> {\n      const file = normalizePath(path)\n\n      // Try deleteing as a file:\n      if (storage['/' + file] != null) delete storage['/' + file]\n\n      // Try deleting as a folder:\n      const folder = folderizePath(file)\n      for (const key of Object.keys(storage)) {\n        if (key.indexOf('/' + folder) === 0) delete storage[key]\n      }\n      return Promise.resolve()\n    },\n\n    getData(path: string): Promise<Uint8Array> {\n      const file = normalizePath(path)\n      const item = storage['/' + file]\n      if (item == null) {\n        return Promise.reject(new Error(`Cannot load \"${file}\"`))\n      }\n      if (typeof item === 'string') {\n        return Promise.reject(new Error(`\"${file}\" is a text file.`))\n      }\n      return Promise.resolve(item)\n    },\n\n    getText(path: string): Promise<string> {\n      const file = normalizePath(path)\n      const item = storage['/' + file]\n      if (item == null) {\n        return Promise.reject(new Error(`Cannot load \"${file}\"`))\n      }\n      if (typeof item !== 'string') {\n        return Promise.reject(new Error(`\"${file}\" is a binary file.`))\n      }\n      return Promise.resolve(item)\n    },\n\n    async list(path: string = ''): Promise<DiskletListing> {\n      const file = normalizePath(path)\n      const out: DiskletListing = {}\n\n      // Try the path as a file:\n      if (storage['/' + file] != null) out[file] = 'file'\n\n      // Try the path as a folder:\n      const folder = folderizePath(file)\n      for (const key of Object.keys(storage)) {\n        if (key.indexOf('/' + folder) !== 0) continue\n\n        const slash = key.indexOf('/', 1 + folder.length)\n        if (slash < 0) out[key.slice(1)] = 'file'\n        else out[key.slice(1, slash)] = 'folder'\n      }\n\n      return Promise.resolve(out)\n    },\n\n    setData(path: string, data: ArrayLike<number>) {\n      // We use `any` here becase Flow is too dumb to know that `ArrayLike`\n      // is a perfectly acceptable argument to `Uint8Array.from`:\n      const flowHack: any = data\n      const array = Uint8Array.from(flowHack)\n\n      storage['/' + normalizePath(path)] = array\n      return Promise.resolve()\n    },\n\n    setText(path: string, text: string): Promise<unknown> {\n      if (typeof text !== 'string') {\n        return Promise.reject(new TypeError('setText expects a string'))\n      }\n\n      storage['/' + normalizePath(path)] = text\n      return Promise.resolve()\n    }\n  }\n}\n","import { Disklet } from '../index'\nimport { DiskletFile, DiskletFolder } from './legacy'\n\nclass File {\n  _disklet: Disklet\n  _path: string\n\n  constructor(disklet: Disklet, path: string) {\n    this._disklet = disklet\n    this._path = path\n  }\n\n  delete(): Promise<unknown> {\n    return this._disklet.delete(this._path)\n  }\n\n  getData(): Promise<Uint8Array> {\n    return this._disklet.getData(this._path)\n  }\n\n  getText(): Promise<string> {\n    return this._disklet.getText(this._path)\n  }\n\n  setData(data: ArrayLike<number>): Promise<unknown> {\n    return this._disklet.setData(this._path, data)\n  }\n\n  setText(text: string): Promise<unknown> {\n    return this._disklet.setText(this._path, text)\n  }\n}\n\nclass Folder {\n  _disklet: Disklet\n  _path: string\n\n  constructor(disklet: Disklet, path: string) {\n    this._disklet = disklet\n    this._path = path\n  }\n\n  delete(): Promise<unknown> {\n    return this._disklet.delete(this._path)\n  }\n\n  file(path: string): DiskletFile {\n    return new File(this._disklet, this._path + '/' + path)\n  }\n\n  folder(path: string): DiskletFolder {\n    return new Folder(this._disklet, this._path + '/' + path)\n  }\n\n  listFiles(): Promise<string[]> {\n    return this._disklet.list(this._path).then(list =>\n      Object.keys(list)\n        .filter(path => list[path] === 'file')\n        .map(path => path.replace(/^.*\\//, ''))\n    )\n  }\n\n  listFolders(): Promise<string[]> {\n    return this._disklet.list(this._path).then(list =>\n      Object.keys(list)\n        .filter(path => list[path] === 'folder')\n        .map(path => path.replace(/^.*\\//, ''))\n    )\n  }\n}\n\nexport function downgradeDisklet(disklet: Disklet): DiskletFolder {\n  return new Folder(disklet, '.')\n}\n","import { DiskletFile, DiskletFolder } from './legacy'\n\n/**\n * Interprets a path as a series of folder lookups,\n * handling special components like `.` and `..`.\n */\nfunction followPath(folder: DiskletFolder, parts: string[]): DiskletFolder {\n  let i = 0 // Read index\n  let j = 0 // Write index\n\n  // Shift down good elements, dropping bad ones:\n  while (i < parts.length) {\n    const part = parts[i++]\n    if (part === '..') j--\n    else if (part !== '.' && part !== '') parts[j++] = part\n\n    if (j < 0) throw new Error('Path would escape folder')\n  }\n\n  // Navigate the folder:\n  for (i = 0; i < j; ++i) {\n    folder = folder.folder(parts[i])\n  }\n  return folder\n}\n\n/**\n * Navigates down to the file indicated by the path.\n */\nexport function locateFile(folder: DiskletFolder, path: string): DiskletFile {\n  const parts = path.split('/')\n  const filename = parts.pop()\n  if (filename == null) throw new Error('Empty path')\n  return followPath(folder, parts).file(filename)\n}\n\n/**\n * Navigates down to the sub-folder indicated by the path.\n */\nexport function locateFolder(\n  folder: DiskletFolder,\n  path: string\n): DiskletFolder {\n  const parts = path.split('/')\n  return followPath(folder, parts)\n}\n\ntype FileIterator<T> = (\n  file: DiskletFile,\n  name: string,\n  parentFolder: DiskletFolder\n) => T | Promise<T>\n\ntype FolderIterator<T> = (\n  folder: DiskletFolder,\n  name: string,\n  parentFolder: DiskletFolder\n) => T | Promise<T>\n\n/**\n * Applies an async function to all the files in a folder.\n */\nexport function mapFiles<T>(\n  folder: DiskletFolder,\n  f: FileIterator<T>\n): Promise<T[]> {\n  return folder\n    .listFiles()\n    .then(names =>\n      Promise.all(names.map(name => f(folder.file(name), name, folder)))\n    )\n}\n\n/**\n * Applies an async function to all the sub-folders in a folder.\n */\nexport function mapFolders<T>(\n  folder: DiskletFolder,\n  f: FolderIterator<T>\n): Promise<T[]> {\n  return folder\n    .listFolders()\n    .then(names =>\n      Promise.all(names.map(name => f(folder.folder(name), name, folder)))\n    )\n}\n\n/**\n * Recursively applies an async function to all the files in a folder tree.\n * The file names are expanded into paths, and the result is a flat array.\n */\nexport function mapAllFiles<T>(\n  folder: DiskletFolder,\n  f: FileIterator<T>\n): Promise<T[]> {\n  function recurse(\n    folder: DiskletFolder,\n    f: FileIterator<T>,\n    prefix: string\n  ): Promise<T[]> {\n    return Promise.all([\n      mapFiles(folder, (file, name) => f(file, prefix + name, folder)),\n      mapFolders(folder, (folder, name) =>\n        recurse(folder, f, prefix + name + '/')\n      )\n    ]).then(([files, folders]) => files.concat(...folders))\n  }\n\n  return recurse(folder, f, '')\n}\n","import { DiskletFile, DiskletFolder } from './legacy'\n\ntype LogOperation =\n  | 'delete file'\n  | 'delete folder'\n  | 'get data'\n  | 'get text'\n  | 'list files'\n  | 'list folders'\n  | 'set data'\n  | 'set text'\n\ninterface LogOptions {\n  callback?: (path: string, operation: LogOperation) => unknown\n  verbose?: boolean\n}\n\nfunction logConsole(path: string, operation: string): void {\n  console.log(`${operation} \"${path}\"`)\n}\n\nfunction log(path: string, operation: LogOperation, opts: LogOptions): void {\n  const { callback = logConsole, verbose = false } = opts\n  if (verbose || /set|delete/.test(operation)) {\n    callback(path, operation)\n  }\n}\n\nclass LoggedFile {\n  _file: DiskletFile\n  _opts: LogOptions\n  _path: string\n\n  constructor(file: DiskletFile, path: string, opts: LogOptions) {\n    this._file = file\n    this._path = path\n    this._opts = opts\n  }\n\n  delete(): Promise<unknown> {\n    log(this._path, 'delete file', this._opts)\n    return this._file.delete()\n  }\n\n  getData(): Promise<Uint8Array> {\n    log(this._path, 'get data', this._opts)\n    return this._file.getData()\n  }\n\n  getText(): Promise<string> {\n    log(this._path, 'get text', this._opts)\n    return this._file.getText()\n  }\n\n  setData(data: ArrayLike<number>): Promise<unknown> {\n    log(this._path, 'set data', this._opts)\n    return this._file.setData(data)\n  }\n\n  setText(text: string): Promise<unknown> {\n    log(this._path, 'set text', this._opts)\n    return this._file.setText(text)\n  }\n\n  getPath(): string {\n    return this._path\n  }\n}\n\nclass LoggedFolder {\n  _folder: DiskletFolder\n  _opts: LogOptions\n  _path: string\n\n  constructor(folder: DiskletFolder, path: string, opts: LogOptions) {\n    this._folder = folder\n    this._path = path\n    this._opts = opts\n  }\n\n  delete(): Promise<unknown> {\n    log(this._path, 'delete folder', this._opts)\n    return this._folder.delete()\n  }\n\n  file(name: string): DiskletFile {\n    return new LoggedFile(\n      this._folder.file(name),\n      this._path + name,\n      this._opts\n    )\n  }\n\n  folder(name: string): DiskletFolder {\n    return new LoggedFolder(\n      this._folder.folder(name),\n      this._path + name + '/',\n      this._opts\n    )\n  }\n\n  listFiles(): Promise<string[]> {\n    log(this._path, 'list files', this._opts)\n    return this._folder.listFiles()\n  }\n\n  listFolders(): Promise<string[]> {\n    log(this._path, 'list folders', this._opts)\n    return this._folder.listFolders()\n  }\n}\n\nexport function makeLoggedFolder(\n  folder: DiskletFolder,\n  opts: LogOptions = {}\n): DiskletFolder {\n  return new LoggedFolder(folder, '', opts)\n}\n","import { mapFiles, mapFolders } from './helpers'\nimport { DiskletFile, DiskletFolder } from './legacy'\n\nfunction removeDuplicates(master: string[], fallback: string[]): string[] {\n  const blacklist: { [name: string]: true } = {}\n  const out: string[] = []\n  master.forEach(item => {\n    if (/\\._x_$/.test(item)) {\n      blacklist[item] = true\n    } else {\n      blacklist[item + '._x_'] = true\n      out.push(item)\n    }\n  })\n\n  fallback.forEach(item => {\n    if (!blacklist[item + '._x_']) out.push(item)\n  })\n\n  return out\n}\n\n/**\n * A file within a unionFolder.\n */\nclass UnionFile {\n  _master: DiskletFile\n  _fallback: DiskletFile\n  _whiteout: DiskletFile\n\n  constructor(\n    master: DiskletFile,\n    fallback: DiskletFile,\n    whiteout: DiskletFile\n  ) {\n    this._master = master\n    this._fallback = fallback\n    this._whiteout = whiteout\n  }\n\n  delete(): Promise<unknown> {\n    return Promise.all([\n      this._whiteout.setData([]),\n      this._master.delete().catch(e => null)\n    ])\n  }\n\n  getData(): Promise<Uint8Array> {\n    return this._master.getData().catch(e =>\n      this._whiteout.getData().then(\n        data => {\n          throw new Error('File has been deleted')\n        },\n        e => this._fallback.getData()\n      )\n    )\n  }\n\n  getText(): Promise<string> {\n    return this._master.getText().catch(e =>\n      this._whiteout.getData().then(\n        data => {\n          throw new Error('File has been deleted')\n        },\n        e => this._fallback.getText()\n      )\n    )\n  }\n\n  setData(data: ArrayLike<number>): Promise<unknown> {\n    return this._master.setData(data)\n  }\n\n  setText(text: string): Promise<unknown> {\n    return this._master.setText(text)\n  }\n\n  getPath(): string {\n    throw new Error('Cannot call getPath on a Union Folder')\n  }\n}\n\n/**\n * Reads and writes go to a master folder, but if a read fails,\n * we will also try the fallback folder.\n */\nexport class UnionFolder {\n  _master: DiskletFolder\n  _fallback: DiskletFolder\n\n  constructor(master: DiskletFolder, fallback: DiskletFolder) {\n    this._master = master\n    this._fallback = fallback\n  }\n\n  delete(): Promise<unknown> {\n    return Promise.all([\n      mapFiles(this, file => file.delete()),\n      mapFolders(this, folder => folder.delete())\n    ]).then(() => {})\n  }\n\n  file(name: string): DiskletFile {\n    return new UnionFile(\n      this._master.file(name),\n      this._fallback.file(name),\n      this._master.file(name + '._x_')\n    )\n  }\n\n  folder(name: string): DiskletFolder {\n    return new UnionFolder(\n      this._master.folder(name),\n      this._fallback.folder(name)\n    )\n  }\n\n  listFiles(): Promise<string[]> {\n    return Promise.all([\n      this._master.listFiles(),\n      this._fallback.listFiles()\n    ]).then(values => removeDuplicates(values[0], values[1]))\n  }\n\n  listFolders(): Promise<string[]> {\n    return Promise.all([\n      this._master.listFolders(),\n      this._fallback.listFolders()\n    ]).then(values => removeDuplicates(values[0], values[1]))\n  }\n}\n\nexport function makeUnionFolder(\n  master: DiskletFolder,\n  fallback: DiskletFolder\n): DiskletFolder {\n  return new UnionFolder(master, fallback)\n}\n","import { Disklet, DiskletListing } from '../index'\n\n/**\n * Recursively lists a folder.\n */\nexport function deepList(\n  disklet: Disklet,\n  path?: string\n): Promise<DiskletListing> {\n  return disklet.list(path).then(list =>\n    // Recurse into subfolders:\n    Promise.all(\n      Object.keys(list)\n        .filter(path => list[path] === 'folder')\n        .map(path => deepList(disklet, path))\n    ).then(children => Object.assign(list, ...children))\n  )\n}\n","import { Disklet, DiskletListing } from '../index'\nimport { normalizePath } from './paths'\n\ntype LogOperation =\n  | 'delete'\n  | 'get data'\n  | 'get text'\n  | 'list'\n  | 'set data'\n  | 'set text'\n\ninterface LogOptions {\n  callback?: (path: string, operation: LogOperation) => unknown\n  verbose?: boolean\n}\n\nexport function logDisklet(disklet: Disklet, opts: LogOptions = {}): Disklet {\n  const {\n    callback = (path: string, operation: string) => {\n      console.log(`${operation} \"${path}\"`)\n    },\n    verbose = false\n  } = opts\n\n  const log = (operation: LogOperation, path: string): void => {\n    if (verbose || /set|delete/.test(operation)) {\n      callback(path, operation)\n    }\n  }\n\n  return {\n    delete(path: string): Promise<unknown> {\n      log('delete', normalizePath(path))\n      return disklet.delete(path)\n    },\n\n    getData(path: string): Promise<Uint8Array> {\n      log('get data', normalizePath(path))\n      return disklet.getData(path)\n    },\n\n    getText(path: string): Promise<string> {\n      log('get text', normalizePath(path))\n      return disklet.getText(path)\n    },\n\n    list(path?: string): Promise<DiskletListing> {\n      log('list', path != null ? normalizePath(path) : '')\n      return disklet.list(path)\n    },\n\n    setData(path: string, data: ArrayLike<number>): Promise<unknown> {\n      log('set data', normalizePath(path))\n      return disklet.setData(path, data)\n    },\n\n    setText(path: string, text: string): Promise<unknown> {\n      log('set text', normalizePath(path))\n      return disklet.setText(path, text)\n    }\n  }\n}\n","import { Disklet, DiskletListing } from '../index'\n\nexport function mergeDisklets(master: Disklet, fallback: Disklet): Disklet {\n  return {\n    delete(path: string): Promise<unknown> {\n      return Promise.all([master.delete(path), fallback.delete(path)])\n    },\n\n    getData(path: string): Promise<Uint8Array> {\n      return master.getData(path).catch(e => fallback.getData(path))\n    },\n\n    getText(path: string): Promise<string> {\n      return master.getText(path).catch(e => fallback.getText(path))\n    },\n\n    list(path?: string): Promise<DiskletListing> {\n      return Promise.all([master.list(path), fallback.list(path)]).then(\n        ([masterList, fallbackList]) => Object.assign(fallbackList, masterList)\n      )\n    },\n\n    setData(path: string, data: ArrayLike<number>): Promise<unknown> {\n      return master.setData(path, data)\n    },\n\n    setText(path: string, text: string): Promise<unknown> {\n      return master.setText(path, text)\n    }\n  }\n}\n","import { Disklet, DiskletListing } from '../index'\nimport { folderizePath, normalizePath } from './paths'\n\nexport function navigateDisklet(disklet: Disklet, path: string): Disklet {\n  const prefix = folderizePath(normalizePath(path))\n\n  return {\n    delete(path: string): Promise<unknown> {\n      return disklet.delete(prefix + path)\n    },\n\n    getData(path: string): Promise<Uint8Array> {\n      return disklet.getData(prefix + path)\n    },\n\n    getText(path: string): Promise<string> {\n      return disklet.getText(prefix + path)\n    },\n\n    list(path: string = '.'): Promise<DiskletListing> {\n      return disklet.list(prefix + path).then(listing => {\n        const out: DiskletListing = {}\n        for (const path in listing) {\n          out[path.replace(prefix, '')] = listing[path]\n        }\n        return out\n      })\n    },\n\n    setData(path: string, data: ArrayLike<number>): Promise<unknown> {\n      return disklet.setData(prefix + path, data)\n    },\n\n    setText(path: string, text: string): Promise<unknown> {\n      return disklet.setText(prefix + path, text)\n    }\n  }\n}\n","import { makeNodeDisklet, makeReactNativeDisklet } from './backends/dummy'\nimport { makeLocalStorageDisklet, WebStorage } from './backends/local-storage'\nimport { makeMemoryDisklet, MemoryStorage } from './backends/memory'\nimport { DiskletFolder, downgradeDisklet } from './legacy/legacy'\n\nexport * from './helpers/helpers'\nexport * from './legacy/legacy'\nexport * from './types'\nexport {\n  makeLocalStorageDisklet,\n  makeMemoryDisklet,\n  makeNodeDisklet,\n  makeReactNativeDisklet\n}\n\n// legacy API ----------------------------------------------------------------\n\nexport function makeLocalStorageFolder(\n  storage: WebStorage,\n  opts?: { prefix?: string }\n): DiskletFolder {\n  return downgradeDisklet(makeLocalStorageDisklet(storage, opts))\n}\n\nexport function makeMemoryFolder(storage?: MemoryStorage): DiskletFolder {\n  return downgradeDisklet(makeMemoryDisklet(storage))\n}\n\nexport function makeNodeFolder(path: string): DiskletFolder {\n  return downgradeDisklet(makeNodeDisklet(path))\n}\n\nexport function makeReactNativeFolder(): DiskletFolder {\n  return downgradeDisklet(makeReactNativeDisklet())\n}\n"],"names":["makeNodeDisklet","path","Error","makeReactNativeDisklet","normalizePath","test","parts","split","i","j","length","part","slice","join","folderizePath","storageKeys","storage","out","key","push","makeLocalStorageDisklet","opts","window","localStorage","prefix","file","getItem","removeItem","folder","indexOf","Promise","resolve","getData","getText","then","text","base64","parse","item","reject","list","slash","setData","data","setText","stringify","TypeError","setItem","makeMemoryDisklet","Object","keys","flowHack","array","Uint8Array","from","File","disklet","_disklet","_path","Folder","listFiles","filter","map","replace","listFolders","downgradeDisklet","followPath","locateFile","filename","pop","locateFolder","mapFiles","f","names","all","name","mapFolders","mapAllFiles","recurse","files","folders","concat","logConsole","operation","console","log","callback","verbose","LoggedFile","_file","_opts","getPath","LoggedFolder","_folder","makeLoggedFolder","removeDuplicates","master","fallback","blacklist","forEach","UnionFile","whiteout","_master","_fallback","_whiteout","e","UnionFolder","values","makeUnionFolder","deepList","children","logDisklet","mergeDisklets","masterList","fallbackList","navigateDisklet","listing","makeLocalStorageFolder","makeMemoryFolder","makeNodeFolder","makeReactNativeFolder"],"mappings":"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"}